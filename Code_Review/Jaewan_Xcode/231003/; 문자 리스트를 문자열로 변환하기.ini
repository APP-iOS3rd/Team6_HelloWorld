; 문자 리스트를 문자열로 변환하기
; 문제 설명
; 문자들이 담겨있는 배열 arr가 주어집니다. arr의 원소들을 순서대로 이어 붙인 문자열을 return 하는 solution함수를 작성해 주세요.

; 제한사항
; 1 ≤ arr의 길이 ≤ 200
; arr의 원소는 전부 알파벳 소문자로 이루어진 길이가 1인 문자열입니다.
; 입출력 예
; arr	result
; ["a","b","c"]	"abc"

;내 풀이: joined()활용

import Foundation

func solution(_ arr:[String]) -> String {
    return arr.joined()
}

; 다른 풀이1: reduce활용

import Foundation

func solution(_ arr:[String]) -> String {
    return arr.reduce("",+)
}

;*** reduce?
; reduce 함수는 Swift에서 매우 강력하고 유용한 고차 함수(higher-order function) 중 하나입니다. 
; 이 함수는 컬렉션(배열, 딕셔너리, 집합 등)의 요소들을 결합하여 하나의 값으로 축소하는 데 사용됩니다. 
; 즉, 컬렉션 내부의 요소를 하나로 합치거나 변환하는 데 유용합니다.

; reduce 함수의 일반적인 형태는 다음과 같습니다:

; swift

; func reduce<Result>(_ initialResult: Result, _ nextPartialResult: (Result, Element) throws -> Result) rethrows -> Result
; initialResult: 초기 결과 값입니다. 연산의 시작점을 나타냅니다.

; nextPartialResult: 클로저(함수)로서 현재 결과(Result)와 컬렉션의 요소(Element)를 받아서 다음 부분 결과(Result)를 반환합니다. 이 클로저는 컬렉션의 각 요소에 대해 호출됩니다.

; rethrows: 클로저가 에러를 던질 수 있는 경우 rethrows 키워드를 사용하여 예외를 다시 던질 수 있음을 나타냅니다.

; 반환 값: Result 형식의 최종 결과 값을 반환합니다.

; 아래는 간단한 예제를 통해 reduce 함수의 동작을 설명합니다:

; swift
; Copy code
; let numbers = [1, 2, 3, 4, 5]
; let sum = numbers.reduce(0) { (result, number) -> Int in
;     return result + number
; }
; print(sum) // 출력: 15
; 위 코드에서 reduce 함수는 초기 결과 값으로 0을 사용하고, 각 요소를 순회하면서 이전 결과와 현재 요소를 더해 최종적으로 숫자의 합을 계산합니다. 결과는 15가 됩니다.

; 따라서 주어진 코드에서 arr.reduce("", +)는 문자열 배열 arr의 모든 요소를 이어붙여 하나의 문자열로 만들어 반환합니다. 초기 결과 값은 빈 문자열("")이며, + 연산자를 사용하여 문자열을 연결하는 방식으로 요소를 누적하고 최종 문자열을 반환합니다.

;예시1: 문자열 결합
; let words = ["Hello", "World", "Swift"] // 문자열 배열 정의

; // reduce 함수를 사용하여 문자열 배열을 결합
; let combinedString = words.reduce("") { (result, word) -> String in
;     if result.isEmpty { // 결과 문자열이 비어있는 경우
;         return word // 현재 단어를 반환 (결과 문자열은 현재 단어로 초기화됨)
;     } else {
;         return result + " " + word // 결과 문자열에 공백과 현재 단어를 추가
;     }
; }

; print(combinedString) // 출력: "Hello World Swift"
; 위 코드에서 주요 작업은 reduce 함수를 사용하여 문자열 배열을 결합하는 것입니다. combinedString 변수에는 초기 결과 값으로 빈 문자열 ""을 설정하고, 각 문자열 요소(word)와 현재 결과(result)를 고려하여 새로운 결과 문자열을 계산합니다.

; 처음에 result는 비어있으므로 현재 단어 word를 반환하여 결과 문자열을 초기화합니다.
; 그 다음부터는 result에 공백과 현재 단어 word를 추가하여 문자열을 결합합니다.
; 결과적으로 combinedString에는 문자열 배열의 요소들이 공백 문자로 구분되어 결합된 문자열 "Hello World Swift"가 저장됩니다.


;예시2: 배열 요소의 곱셈

; 아래 예제는 배열의 모든 요소를 곱해서 결과를 반환하는 예시입니다:

; swift
; Copy code
; let numbers = [2, 3, 4, 5]
; let product = numbers.reduce(1) { (result, number) -> Int in
;     return result * number
; }
; print(product) // 출력: 120
; 이 예제에서 reduce 함수는 초기 결과 값으로 1을 사용하고, 각 요소를 곱해 최종 곱셈 결과를 계산합니다.



; 다른풀이2: newString에 append시켜서 합침을 진행, return으로 반환 
import Foundation

func solution(_ arr:[String]) -> String {
            var newString = ""
        for i in arr{
            newString.append(i)
        }
        return newString
}




