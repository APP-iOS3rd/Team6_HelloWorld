; 문자열 곱하기
; 문제 설명
; 문자열 my_string과 정수 k가 주어질 때, my_string을 k번 반복한 문자열을 return 하는 solution 함수를 작성해 주세요.

; 제한사항
; 1 ≤ my_string의 길이 ≤ 100
; my_string은 영소문자로만 이루어져 있습니다.
; 1 ≤ k ≤ 100
; 입출력 예
; my_string	k	result
; "string"	3	"stringstringstring"
; "love"	10	"lovelovelovelovelovelovelovelovelovelove"
; 입출력 예 설명
; 입출력 예 #1

; 예제 1번의 my_string은 "string"이고 이를 3번 반복한 문자열은 "stringstringstring"이므로 이를 return 합니다.
; 입출력 예 #2

; 예제 2번의 my_string은 "love"이고 이를 10번 반복한 문자열은 "lovelovelovelovelovelovelovelovelovelove"이므로 이를 return 합니다.


;내 풀이  변수 str을 string타입의 배열을 생성해서 for문을 이용해서 그곳에 my_string을 반복적으로 넣는 식으로 진행함 그것을 합쳐야해서 joined사용 
;****Feedback   seperator(x) , separator(o)
import Foundation

func solution(_ my_string:String, _ k:Int) -> String {
    var str:[String] = []
    for i in 1...k {
        str.append(my_string)
    }
    let result = str.joined(separator: "")
    return result
}


;다른풀이1 : repeating을 이용

import Foundation

func solution(_ my_string:String, _ k:Int) -> String {
    return String(repeating: my_string, count: k)
}


; String(repeating:count:) 함수는 Swift의 내장 함수로, 
; 주어진 문자열 my_string을 k번 반복하여 새로운 문자열을 생성하는 데 사용됩니다. 
; 이 함수를 호출하면 문자열 my_string이 k번 반복된 결과 문자열이 반환됩니다.

; 예를 들어:

; swift
; Copy code
; let result = String(repeating: "Hello, ", count: 3)
; 위의 코드는 "Hello, " 문자열을 3번 반복하여 "Hello, Hello, Hello, " 문자열을 생성하고 result 변수에 할당합니다.

; 이 함수는 문자열을 반복하는 간편한 방법을 제공하며, 문자열을 특정 횟수만큼 반복해야 할 때 유용하게 사용됩니다.



;다른풀이2:   result로 초기화하고    result에 my_string을 +=시켜서 result값을 반환시킨것 
import Foundation

func solution(_ my_string:String, _ k:Int) -> String {
    var result = ""

    for _ in 1...k {
        result += my_string
    }

    return result
}

