; 더 크게 합치기
; 문제 설명
; 연산 ⊕는 두 정수에 대한 연산으로 두 정수를 붙여서 쓴 값을 반환합니다. 예를 들면 다음과 같습니다.

; 12 ⊕ 3 = 123
; 3 ⊕ 12 = 312
; 양의 정수 a와 b가 주어졌을 때, a ⊕ b와 b ⊕ a 중 더 큰 값을 return 하는 solution 함수를 완성해 주세요.

; 단, a ⊕ b와 b ⊕ a가 같다면 a ⊕ b를 return 합니다.

; 제한사항
; 1 ≤ a, b < 10,000
; 입출력 예
; a	b	result
; 9	91	991
; 89	8	898
; 입출력 예 설명
; 입출력 예 #1

; a ⊕ b = 991 이고, b ⊕ a = 919 입니다. 둘 중 더 큰 값은 991 이므로 991을 return 합니다.
; 입출력 예 #2

; a ⊕ b = 898 이고, b ⊕ a = 889 입니다. 둘 중 더 큰 값은 898 이므로 898을 return 합니다.


;내 풀이:  문자열로 a 와 b를 변환시킨후 astr bstr을 더한값을 지정해 둘의 값비교했을때 
; 그 크기를 return시킴   
; ****Feedback = 타입변환시에 String(a) (o)   (String)a  (x)
import Foundation

    func solution(_ a:Int, _ b:Int) -> Int {
    let aStr = String(a)
    let bStr = String(b)
    
    let abConcatenated = Int(aStr + bStr)!
    let baConcatenated = Int(bStr + aStr)!
    
    return max(abConcatenated, baConcatenated)



; 다른풀이1: max로 한번에 진행, \(a)\(b)로 문자열을 만든것을 다시 Int형변환시켜서 풀이진행

func solution(_ a: Int, _ b: Int) -> Int { max(Int("\(a)\(b)")!, Int("\(b)\(a)")!) }


; 다른풀이2:
func solution(_ a:Int, _ b:Int) -> Int {

    let ab: Int = Int(String(a) + String(b))!
    let ba: Int = Int(String(b) + String(a))!

    return ab >= ba ? ab : ba