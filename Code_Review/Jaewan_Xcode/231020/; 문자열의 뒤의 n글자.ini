; 문자열의 뒤의 n글자
; 문제 설명
; 문자열 my_string과 정수 n이 매개변수로 주어질 때, my_string의 뒤의 n글자로 이루어진 문자열을 return 하는 solution 함수를 작성해 주세요.

; 제한사항
; my_string은 숫자와 알파벳으로 이루어져 있습니다.
; 1 ≤ my_string의 길이 ≤ 1,000
; 1 ≤ n ≤ my_string의 길이
; 입출력 예
; my_string	n	result
; "ProgrammerS123"	11	"grammerS123"
; "He110W0r1d"	5	"W0r1d"
; 입출력 예
; 입출력 예 #1

; 예제 1번의 my_string에서 뒤의 11글자는 "grammerS123"이므로 이 문자열을 return 합니다.
; 입출력 예 #2

; 예제 2번의 my_string에서 뒤의 5글자는 "W0r1d"이므로 이 문자열을 return 합니다.

;내풀이1:
import Foundation

func solution(_ my_string: String, _ n: Int) -> String {
    ; 문자열을 배열로 변환
    let characterArray = Array(my_string)
    
    ; 주어진 문자열의 길이
    let stringLength = characterArray.count
    
    ; n이 문자열의 길이 이상인 경우, 문자열 전체를 반환
    if n >= stringLength {
        return my_string
    }
    
    ; 배열에서 뒤의 n 글자를 추출
    let startIndex = stringLength - n
    let endIndex = stringLength
    let extractedCharacters = characterArray[startIndex..<endIndex]
    
    ; 추출된 문자들을 다시 문자열로 결합
    let result = String(extractedCharacters)
    
    return result
}


;다른풀이: SUFFIX함수이용 
import Foundation

func solution(_ my_string:String, _ n:Int) -> String {
    return String(my_string.suffix(n))
}

;다른풀이2: 인덱스에 접근, offsetBy활용한게 좋앗음
import Foundation

func solution(_ my_string:String, _ n:Int) -> String {
    let index = my_string.index(my_string.startIndex, offsetBy: my_string.count - n)
    return String(my_string[index...])
}

;다른풀이3: map함수 활용해서 필요없는부분 없애고 joined로 모음 
import Foundation

func solution(_ my_string:String, _ n:Int) -> String {
    return my_string.map{ String($0) }[my_string.count-n..<my_string.count].joined()
}