; 카운트 다운
; 문제 설명
; 정수 start_num와 end_num가 주어질 때, start_num에서 end_num까지 1씩 감소하는 수들을 차례로 담은 리스트를 return하도록 solution 함수를 완성해주세요.

; 제한사항
; 0 ≤ end_num ≤ start_num ≤ 50
; 입출력 예
; start_num	end_num	result
; 10	3	[10, 9, 8, 7, 6, 5, 4, 3]
; 입출력 예 설명
; 입출력 예 #1

; 10부터 3까지 1씩 감소하는 수를 담은 리스트는 [10, 9, 8, 7, 6, 5, 4, 3]입니다.


;내풀이:
import Foundation

func solution(_ start:Int, _ end_num:Int) -> [Int] {
    var a: [Int] = []
    for i in end_num...start {
        a.append(i)
    }
    return a.reversed()
}

;다른풀이1: (...)배열로 풀이
import Foundation

func solution(_ start:Int, _ end:Int) -> [Int] {
    return (end...start).reversed()
}

;다른풀이2: sorted 활용
func solution(_ start: Int, _ end: Int) -> [Int] {
     Array((end...start).sorted().reversed()) 
     }


;다른풀이3: map 함수활용 
func solution(_ start:Int, _ end:Int) -> [Int] {
    return (end...start).map { $0 }.reversed()
}

;다른풀이4:  stride함수 활용 
func solution(_ start:Int, _ end:Int) -> [Int] {
    return stride(from: start, through: end, by: -1).map{$0}
}

; 다른풀이5:  forEach활용 
func solution(_ start:Int, _ end:Int) -> [Int] {
    var answer: [Int] = []

    stride(from: start, through: end, by: -1).forEach {
        answer.append($0)
    }

    return answer
}