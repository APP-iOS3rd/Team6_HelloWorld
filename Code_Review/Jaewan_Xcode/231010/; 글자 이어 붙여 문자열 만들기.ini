; 글자 이어 붙여 문자열 만들기
; 문제 설명
; 문자열 my_string과 정수 배열 index_list가 매개변수로 주어집니다.
;  my_string의 index_list의 원소들에 해당하는 인덱스의 글자들을 순서대로 이어 붙인 문자열을 return 하는 solution 함수를 작성해 주세요.

; 제한사항
; 1 ≤ my_string의 길이 ≤ 1,000
; my_string의 원소는 영소문자로 이루어져 있습니다.
; 1 ≤ index_list의 길이 ≤ 1,000
; 0 ≤ index_list의 원소 < my_string의 길이
; 입출력 예
; my_string	             index_list	                                  result
; "cvsgiorszzzmrpaqpe"	[16, 6, 5, 3, 12, 14, 11, 11, 17, 12, 7]	"programmers"
; "zpiaz"                 [1, 2, 0, 0, 3]	                             "pizza"
; 입출력 예 설명
; 입출력 예 #1

; 예제 1번의 my_string에서 인덱스 3, 5, 6, 11, 12, 14, 16, 17에 해당하는 글자는 각각 g, o, r, m, r, a, p, e이므로 my_string에서 index_list에 들어있는 원소에 해당하는 인덱스의 글자들은 각각 순서대로 p, r, o, g, r, a, m, m, e, r, s입니다. 따라서 "programmers"를 return 합니다.
; 입출력 예 #2

; 예제 2번의 my_string에서 인덱스 0, 1, 2, 3에 해당하는 글자는 각각 z, p, i, a이므로 my_string에서 index_list에 들어있는 원소에 해당하는 인덱스의 글자들은 각각 순서대로 p, i, z, z, a입니다. 따라서 "pizza"를 return 합니다.


;내풀이:  result를 초기화시킨후  for 루프를 사용해 index_list 배열의 각 인덱스에 해당하는 문자를 추출하고 result에 추가
; for 루프를 사용하여 index_list에 있는 각 인덱스를 순회합니다.
; charIndex 변수를 사용하여 주어진 index에 해당하는 문자를 my_string에서 추출합니다.
; 추출한 문자를 result 문자열에 추가합니다.
; 결과 문자열 result를 반환합니다.
import Foundation

func solution(_ my_string:String, _ index_list:[Int]) -> String {
    var result = ""
    
    for index in index_list {
        let charIndex = my_string.index(my_string.startIndex, offsetBy: index)
        result.append(my_string[charIndex])
    }
    
    return result
}


;다른풀이1: map함수로 나열후 joined()함수로 합침처리 
func solution(_ myString: String, _ indexList: [Int]) -> String {
    return indexList.map { String(myString[myString.index(myString.startIndex, offsetBy: $0)]) }.joined()
}

;다른풀이2: String형으로 만들고 합침 새로운 index를 만들어 재배열이후 result에 삽입 return result로 반환 
mport Foundation

func solution(_ my_string:String, _ index_list:[Int]) -> String {
    var result = String()
    index_list.forEach {
        let index = my_string.index(my_string.startIndex, offsetBy: $0)
        result += String(my_string[index])
    }
    return result
}
